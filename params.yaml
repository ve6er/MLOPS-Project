data_preprocessing:
  input_path: data/raw/global-data-on-sustainable-energy.csv
  output_path: data/preprocessed/global_sustainable_energy_preprocessed2.csv
  imputation_path: artifacts/imputation_values.json
  ohe_columns_path: artifacts/ohe_columns.json

feature_engineering:
  input_path: data/preprocessed/global_sustainable_energy_preprocessed2.csv
  output_path: data/features/featured_data.csv
  boxcox_lambda_path: artifacts/boxcox_lambdas.json
  cols_to_transform:
    - 'Electricity from fossil fuels (TWh)'
    - 'Electricity from nuclear (TWh)'
    - 'Electricity from renewables (TWh)'
    - 'Financial flows to developing countries (US $)'
    - 'Primary energy consumption per capita (kWh/person)'
    - 'Renewable-electricity-generating-capacity-per-capita'
    - 'Renewables (% equivalent primary energy)'
    - 'Value_co2_emissions_kt_by_country'
    - 'gdp_growth'
    - 'gdp_per_capita'

data_split:
  train_path: data/processed/train.csv
  test_path: data/processed/test.csv
  test_size: 0.2
  random_state: 42
  target_col: 'Renewables (% equivalent primary energy)' # This was missing, I'm guessing based on your code

train:
  models_dir: models_exp # Directory to save all experimental models
  reports_dir: reports_exp # Directory for DVCLive to save metrics
  scaler_path: artifacts/scaler.pkl
  
  # Define the metric to find the best model
  primary_metric: 'r2_score' 
  metric_goal: 'maximize' # 'maximize' or 'minimize'

  # Define all models to experiment with
  experiments:
    ridge:
      type: 'Ridge'
      params:
        alpha: 1.0
    
    lasso:
      type: 'Lasso'
      params:
        alpha: 0.5
        
    random_forest:
      type: 'RandomForestRegressor'
      params:
        n_estimators: 100
        max_depth: 10
        random_state: 42

select_best:
  final_model_path: model/model.pkl # The final model path for app.py
  best_model_summary_path: reports/best_model_summary.json


